#!/bin/bash
#
# Copyright (C) 2010 Cyril Bouthors <cyril@boutho.rs>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#

set -e

mysql='timeout 10 mysql --defaults-file=/etc/mysql/debian.cnf -B'

# Ping MySQL. We can't use "mysqladmin ping" because it always returns true!
if ! $mysql -e 'SELECT 1' >/dev/null 2>/dev/null
then
    echo 'Unable to connect to MySQL'
    exit 2
fi

# # Check for long lasting queries. Ignore this check if a backup. repair or
# # optimize is running
# long_lasting_queries=$($mysql -e 'SHOW FULL PROCESSLIST \G' \
#     | awk -F '[ :]' '/Time/ {time=$NF} ! /NULL$/ {if(time>=300 && sub(/^.*Info:/, "") == 1) print}')
# if [ ! -z "$long_lasting_queries" ] &&
#     ! echo $long_lasting_queries | grep -qE '(SQL_NO_CACHE|REPAIR|OPTIMIZE)'
# then
#     echo "Long lasting SQL queries: $long_lasting_queries" \
# 	| mail -s long-query-$HOSTNAME cyril.bouthors@isvtec.com
# #    exit 2
# fi

# Fetch connections information
max_connections=$($mysql -e "SHOW VARIABLES LIKE 'max_connections'" \
    | awk '/^max_connections/ {print $2}')

current_threads=$($mysql -e '\s' | awk '/^Threads: / {print $2}')

if [ -z "$max_connections" -o -z "$current_threads" ]
then
    echo 'Unable to fetch connection information'
    exit 2
fi

# Check that InnoDB is available
if ! $mysql -e 'SHOW ENGINES' | grep -qF 'InnoDB'
then
    echo 'InnoDB engine is not available'
    exit 1
fi

# Calculate percentage of used connections
percentage=$(($current_threads * 100 / $max_connections))
echo "$current_threads/$max_connections connections ($percentage%)"

# Check that we are bellow 80% of the maximum number of connections
threshold=80
if [ $percentage -gt $threshold ]
then
    exit 2
fi
