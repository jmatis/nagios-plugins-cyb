#!/bin/bash
#
# Copyright (C) 2013 Cyril Bouthors <cyril@boutho.rs>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.

# CREATE DATABASE replication_check;
# CREATE TABLE replication_check (field1 timestamptz);
# INSERT INTO replication_check (field1) VALUES (NOW());

lag_threshold=$1
database=$2
table=$3
field=$4
standby_server=$5

set -e -o pipefail -o nounset

# Check arguments
if [ -z "$lag_threshold" -o -z "$database" -o -z "$table" -o -z "$field" -o -z \
	"$standby_server" ]
then
    echo "$0: Missing argument"
    echo "$0 LAG_THRESHOLD DATABASE TABLE FIELD STANDBY_SERVER"
    exit 2
fi

psql="psql -A -q -t $database"
query="SELECT COUNT(*) FROM pg_stat_replication WHERE state='streaming'"

read count <<< $($psql -c "$query")

if [ -z "$count" ] || [ "$count" = 0 ]
then
    echo -n 'Replication is not working: '
    $psql -c "SELECT * FROM pg_stat_replication" | tr "\n" ' '
    exit 2
fi

# Update timestamp
$psql -c "UPDATE $table SET $field = NOW();"

# Read the timestamp from the standby
read lag <<< $($psql -h $standby_server -c \
    "SELECT ROUND(EXTRACT(EPOCH FROM NOW() - $field)) FROM $table")

if [ -z "$lag" ]
then
   echo "Unable to fetch lag from PostgreSQL"
   exit 2
fi

echo "$lag seconds lag"

if [ "$lag" -gt "$lag_threshold" ]
then
    exit 2
fi
