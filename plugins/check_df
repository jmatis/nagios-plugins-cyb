#!/bin/bash
#
# Copyright (C) 2012 Cyril Bouthors <cyril@boutho.rs>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

export LC_ALL=C

warning_threshold=$1
critical_threshold=$2
warning_inodes_threshold=${3:-20000000}
shift 3
excluded_paths=$*
units='B'

set -e -o pipefail -u

function check_params {
    if [ -z "$warning_threshold" -o -z "$critical_threshold" ]
    then
        echo "$0: too few argument" >&2
        echo "Usage: $0 WARN_THRESHOLD CRITICAL_THRESHOLD [WARN_INODES_THRESHOLD] [EXCLUDED_PATH [EXCLUDED_PATH [...]]]" >&2
        echo "Example: $0 80 90" >&2
        echo "Example: $0 80 90 20000000 /var/lib/lxc" >&2
        exit 1
    fi
}

function check_inodes {
    if awk \
    -vused="$used" \
    -vwarning_inodes_threshold="$warning_inodes_threshold" \
    'BEGIN{exit (used >= warning_inodes_threshold) ? 0 : 1 }'
    then
        echo "$mount_point has more than ${warning_inodes_threshold} inodes"
        exit 2
    fi
}

function check_warning_threshold {
    if awk \
    -vpercentage="$percentage" \
    -vwarning_threshold="$warning_threshold" \
    'BEGIN{exit (percentage >= warning_threshold) ? 0 : 1 }'
    then
        echo -n "$mount_point is ${percentage}% full, "
        echo "$available$units available. "
        exit 1
    fi
}

function check_critical_threshold {
    if awk \
    -vpercentage="$percentage" \
    -vcritical_threshold="$critical_threshold" \
    'BEGIN{exit (percentage >= critical_threshold) ? 0 : 1 }'
    then
        echo -n "$mount_point is ${percentage}% full, "
        echo "$available$units available. "
        exit 2
    fi
}

function filesystem_loop {
    (
        $1 $2
    ) | while read fs type size used available percentage mount_point
    do
        # Check if mount point exists
        if [ "$fs" = 'Filesystem' ]
        then
            continue
        fi

        # Check if we are in the an excluded path
        for excluded_path in $excluded_paths
        do
            if echo $mount_point | grep -qE "^$excluded_path"
            then
                continue 2
            fi
        done

        percentage=${percentage%\%}

        check_critical_threshold
        check_warning_threshold

        if [ ! -z ${3+x} ]
        then
            check_inodes
        fi
    done
}

function main {
    check_params

    local display_free_space='df -PlTh'
    local display_free_inodes='df -PlTi'

    filesystem_loop $display_free_space
    filesystem_loop $display_free_inodes inodes

    echo 'OK'
    exit 0
}

main
